<?xml version="1.0" encoding="UTF-8"?>
<gmfgen:GenEditorGenerator xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:gmfgen="http://www.eclipse.org/gmf/2005/GenModel" modelID="ProVerVisual" sameFileForDiagramAndModel="true" diagramFileExtension="pvd" templateDirectory="">
  <diagram visualID="79" editPartClassName="ProtocolEditPart" itemSemanticEditPolicyClassName="ProtocolItemSemanticEditPolicy" notationViewFactoryClassName="ProtocolViewFactory" iconProviderPriority="Low" canonicalEditPolicyClassName="ProtocolCanonicalEditPolicy">
    <diagramRunTimeClass href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Diagram"/>
    <elementType xsi:type="gmfgen:MetamodelType"/>
    <viewmap xsi:type="gmfgen:FigureViewmap" figureQualifiedClassName="org.eclipse.draw2d.FreeformLayer"/>
    <domainDiagramElement href="ProVerVisual.genmodel#//provervisual/Protocol"/>
    <topLevelNodes visualID="1001" editPartClassName="InitialStateEditPart" itemSemanticEditPolicyClassName="InitialStateItemSemanticEditPolicy" notationViewFactoryClassName="InitialStateViewFactory" canonicalEditPolicyClassName="InitialStateCanonicalEditPolicy" graphicalNodeEditPolicyClassName="InitialStateGraphicalNodeEditPolicy">
      <diagramRunTimeClass href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType xsi:type="gmfgen:MetamodelType"/>
      <viewmap xsi:type="gmfgen:InnerClassViewmap" className="InitialState" classBody="&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;public class InitialState extends org.eclipse.draw2d.Ellipse {&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public InitialState() {&#x9;&#xA;&#x9;&#x9;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;this.setForegroundColor(new org.eclipse.swt.graphics.Color(null, 0, 0, 0));&#xA;&#x9;&#x9;this.setBackgroundColor(new org.eclipse.swt.graphics.Color(null, 0, 0, 0));&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private boolean myUseLocalCoordinates = false;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;protected boolean useLocalCoordinates() {&#xA;&#x9;&#x9;return myUseLocalCoordinates;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;protected void setUseLocalCoordinates(boolean useLocalCoordinates) {&#xA;&#x9;&#x9;myUseLocalCoordinates = useLocalCoordinates;&#xA;&#x9;}&#xA;&#x9;&#xA;}&#xA;">
        <attributes xsi:type="gmfgen:ResizeConstraints" resizeHandles="29"/>
      </viewmap>
      <modelFacet>
        <metaClass href="ProVerVisual.genmodel#//provervisual/InitialState"/>
        <containmentMetaFeature href="ProVerVisual.genmodel#//provervisual/Protocol/states"/>
        <childMetaFeature href="ProVerVisual.genmodel#//provervisual/Protocol/states"/>
      </modelFacet>
    </topLevelNodes>
    <topLevelNodes visualID="1002" editPartClassName="FinalStateEditPart" itemSemanticEditPolicyClassName="FinalStateItemSemanticEditPolicy" notationViewFactoryClassName="FinalStateViewFactory" canonicalEditPolicyClassName="FinalStateCanonicalEditPolicy" graphicalNodeEditPolicyClassName="FinalStateGraphicalNodeEditPolicy">
      <diagramRunTimeClass href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType xsi:type="gmfgen:MetamodelType"/>
      <viewmap xsi:type="gmfgen:InnerClassViewmap" className="FinalState" classBody="&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;public class FinalState extends org.eclipse.draw2d.Ellipse {&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public FinalState() {&#x9;&#xA;&#x9;&#x9;&#xA;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;this.setLineWidth(3);&#x9;&#x9;this.setForegroundColor(new org.eclipse.swt.graphics.Color(null, 0, 0, 0));&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private boolean myUseLocalCoordinates = false;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;protected boolean useLocalCoordinates() {&#xA;&#x9;&#x9;return myUseLocalCoordinates;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;protected void setUseLocalCoordinates(boolean useLocalCoordinates) {&#xA;&#x9;&#x9;myUseLocalCoordinates = useLocalCoordinates;&#xA;&#x9;}&#xA;&#x9;&#xA;}&#xA;">
        <attributes xsi:type="gmfgen:ResizeConstraints" resizeHandles="29"/>
      </viewmap>
      <modelFacet>
        <metaClass href="ProVerVisual.genmodel#//provervisual/FinalState"/>
        <containmentMetaFeature href="ProVerVisual.genmodel#//provervisual/Protocol/states"/>
        <childMetaFeature href="ProVerVisual.genmodel#//provervisual/Protocol/states"/>
      </modelFacet>
    </topLevelNodes>
    <topLevelNodes visualID="1003" editPartClassName="ActionStateEditPart" itemSemanticEditPolicyClassName="ActionStateItemSemanticEditPolicy" notationViewFactoryClassName="ActionStateViewFactory" canonicalEditPolicyClassName="ActionStateCanonicalEditPolicy" graphicalNodeEditPolicyClassName="ActionStateGraphicalNodeEditPolicy">
      <diagramRunTimeClass href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType xsi:type="gmfgen:MetamodelType"/>
      <viewmap xsi:type="gmfgen:InnerClassViewmap" className="ActionState" classBody="&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;public class ActionState extends org.eclipse.draw2d.Ellipse {&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public ActionState() {&#x9;&#xA;&#x9;&#x9;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;this.setForegroundColor(new org.eclipse.swt.graphics.Color(null, 0, 0, 0));&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private boolean myUseLocalCoordinates = false;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;protected boolean useLocalCoordinates() {&#xA;&#x9;&#x9;return myUseLocalCoordinates;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;protected void setUseLocalCoordinates(boolean useLocalCoordinates) {&#xA;&#x9;&#x9;myUseLocalCoordinates = useLocalCoordinates;&#xA;&#x9;}&#xA;&#x9;&#xA;}&#xA;">
        <attributes xsi:type="gmfgen:ResizeConstraints" resizeHandles="29"/>
      </viewmap>
      <modelFacet>
        <metaClass href="ProVerVisual.genmodel#//provervisual/ActionState"/>
        <containmentMetaFeature href="ProVerVisual.genmodel#//provervisual/Protocol/states"/>
        <childMetaFeature href="ProVerVisual.genmodel#//provervisual/Protocol/states"/>
      </modelFacet>
    </topLevelNodes>
    <topLevelNodes visualID="1004" editPartClassName="OperationEditPart" itemSemanticEditPolicyClassName="OperationItemSemanticEditPolicy" notationViewFactoryClassName="OperationViewFactory" canonicalEditPolicyClassName="OperationCanonicalEditPolicy" graphicalNodeEditPolicyClassName="OperationGraphicalNodeEditPolicy">
      <diagramRunTimeClass href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType xsi:type="gmfgen:MetamodelType"/>
      <viewmap xsi:type="gmfgen:InnerClassViewmap" className="Operation" classBody="&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;public class Operation extends org.eclipse.draw2d.RoundedRectangle {&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public Operation() {&#x9;&#xA;&#x9;&#x9;&#xA;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;this.setLineWidth(2);&#xA;&#x9;&#x9;this.setBackgroundColor(new org.eclipse.swt.graphics.Color(null, 240, 255, 0));&#xA;&#x9;&#x9;this.setPreferredSize(getMapMode().DPtoLP(140), getMapMode().DPtoLP(70));&#xA;this.setCornerDimensions(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(8), getMapMode().DPtoLP(8)));&#xA;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;org.eclipse.gmf.runtime.draw2d.ui.figures.WrapLabel childOperationOperationAbbrevFigure = createFigureOperationOperationAbbrevFigure();&#xA;&#x9;&#x9;setFigureOperationOperationAbbrevFigure(childOperationOperationAbbrevFigure);&#xA;&#x9;&#x9;add(childOperationOperationAbbrevFigure);&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;org.eclipse.gmf.runtime.draw2d.ui.figures.WrapLabel childOperationOperationDescriptionFigure = createFigureOperationOperationDescriptionFigure();&#xA;&#x9;&#x9;setFigureOperationOperationDescriptionFigure(childOperationOperationDescriptionFigure);&#xA;&#x9;&#x9;add(childOperationOperationDescriptionFigure);&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;org.eclipse.gmf.runtime.draw2d.ui.figures.WrapLabel childOperationOperationNameFigure = createFigureOperationOperationNameFigure();&#xA;&#x9;&#x9;setFigureOperationOperationNameFigure(childOperationOperationNameFigure);&#xA;&#x9;&#x9;add(childOperationOperationNameFigure);&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#xA;&#x9;}&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrapLabel fOperationOperationAbbrevFigure; &#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrapLabel getFigureOperationOperationAbbrevFigure() {&#xA;&#x9;&#x9;return fOperationOperationAbbrevFigure;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;protected void setFigureOperationOperationAbbrevFigure(org.eclipse.gmf.runtime.draw2d.ui.figures.WrapLabel figure) {&#xA;&#x9;&#x9;fOperationOperationAbbrevFigure = figure;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrapLabel createFigureOperationOperationAbbrevFigure() {&#xA;org.eclipse.gmf.runtime.draw2d.ui.figures.WrapLabel OperationOperationAbbrevFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrapLabel();&#xA;OperationOperationAbbrevFigure.setText(&quot;&lt;...>&quot;);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;&#x9;return OperationOperationAbbrevFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrapLabel fOperationOperationDescriptionFigure; &#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrapLabel getFigureOperationOperationDescriptionFigure() {&#xA;&#x9;&#x9;return fOperationOperationDescriptionFigure;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;protected void setFigureOperationOperationDescriptionFigure(org.eclipse.gmf.runtime.draw2d.ui.figures.WrapLabel figure) {&#xA;&#x9;&#x9;fOperationOperationDescriptionFigure = figure;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrapLabel createFigureOperationOperationDescriptionFigure() {&#xA;org.eclipse.gmf.runtime.draw2d.ui.figures.WrapLabel OperationOperationDescriptionFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrapLabel();&#xA;OperationOperationDescriptionFigure.setText(&quot;&lt;...>&quot;);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;&#x9;return OperationOperationDescriptionFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrapLabel fOperationOperationNameFigure; &#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrapLabel getFigureOperationOperationNameFigure() {&#xA;&#x9;&#x9;return fOperationOperationNameFigure;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;protected void setFigureOperationOperationNameFigure(org.eclipse.gmf.runtime.draw2d.ui.figures.WrapLabel figure) {&#xA;&#x9;&#x9;fOperationOperationNameFigure = figure;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrapLabel createFigureOperationOperationNameFigure() {&#xA;org.eclipse.gmf.runtime.draw2d.ui.figures.WrapLabel OperationOperationNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrapLabel();&#xA;OperationOperationNameFigure.setText(&quot;&lt;...>&quot;);&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;&#x9;return OperationOperationNameFigure;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private boolean myUseLocalCoordinates = false;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;protected boolean useLocalCoordinates() {&#xA;&#x9;&#x9;return myUseLocalCoordinates;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;protected void setUseLocalCoordinates(boolean useLocalCoordinates) {&#xA;&#x9;&#x9;myUseLocalCoordinates = useLocalCoordinates;&#xA;&#x9;}&#xA;&#x9;&#xA;}&#xA;">
        <attributes xsi:type="gmfgen:ResizeConstraints" resizeHandles="29"/>
      </viewmap>
      <modelFacet>
        <metaClass href="ProVerVisual.genmodel#//provervisual/Operation"/>
        <containmentMetaFeature href="ProVerVisual.genmodel#//provervisual/Protocol/operations"/>
        <childMetaFeature href="ProVerVisual.genmodel#//provervisual/Protocol/operations"/>
      </modelFacet>
    </topLevelNodes>
    <links visualID="3001" editPartClassName="Operation2EditPart" itemSemanticEditPolicyClassName="Operation2ItemSemanticEditPolicy" notationViewFactoryClassName="Operation2ViewFactory">
      <diagramRunTimeClass href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Edge"/>
      <elementType xsi:type="gmfgen:SpecializationType" metamodelType="//@diagram/@topLevelNodes.3/@elementType"/>
      <viewmap xsi:type="gmfgen:InnerClassViewmap" className="Link" classBody="&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;public class Link extends org.eclipse.gmf.runtime.draw2d.ui.figures.PolylineConnectionEx {&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public Link() {&#xA;&#xA;&#x9;&#x9;this.setLineWidth(2);&#xA;&#x9;&#x9;setTargetDecoration(createTargetDecoration());&#xA;&#x9;}&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.PolylineDecoration createTargetDecoration() {&#xA;org.eclipse.draw2d.PolylineDecoration df = new org.eclipse.draw2d.PolylineDecoration();&#xA;// dispatchNext?&#xA;&#xA;&#x9;&#x9;df.setLineWidth(2);&#xA;&#x9;&#x9;org.eclipse.draw2d.geometry.PointList pl = new org.eclipse.draw2d.geometry.PointList();&#xA;&#x9;&#x9;pl.addPoint(-2, -2);&#xA;&#x9;&#x9;pl.addPoint(0, 0);&#xA;&#x9;&#x9;pl.addPoint(-2, 2);&#xA;&#x9;&#x9;df.setTemplate(pl);&#xA;&#x9;&#x9;df.setScale(getMapMode().DPtoLP(7), getMapMode().DPtoLP(3));&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;&#x9;return df;&#xA;&#x9;}&#xA;}"/>
      <modelFacet xsi:type="gmfgen:TypeLinkModelFacet">
        <metaClass href="ProVerVisual.genmodel#//provervisual/Operation"/>
        <containmentMetaFeature href="ProVerVisual.genmodel#//provervisual/Protocol/operations"/>
        <childMetaFeature href="ProVerVisual.genmodel#//provervisual/Protocol/operations"/>
        <sourceMetaFeature href="ProVerVisual.genmodel#//provervisual/Operation/startState"/>
        <targetMetaFeature href="ProVerVisual.genmodel#//provervisual/Operation/endState"/>
      </modelFacet>
    </links>
    <palette>
      <groups titleKey="provervisual" entryID="1">
        <nodeTools titleKey="InitialState" descriptionKey="Create new InitialState" entryID="1001" genNode="//@diagram/@topLevelNodes.0"/>
        <nodeTools titleKey="FinalState" descriptionKey="Create new FinalState" entryID="1002" genNode="//@diagram/@topLevelNodes.1"/>
        <nodeTools titleKey="ActionState" descriptionKey="Create new ActionState" entryID="1003" genNode="//@diagram/@topLevelNodes.2"/>
        <nodeTools titleKey="Operation" descriptionKey="Create new Operation" entryID="1004" genNode="//@diagram/@topLevelNodes.3"/>
        <linkTools titleKey="Link" descriptionKey="Create new Link" entryID="2001" genLink="//@diagram/@links.0"/>
      </groups>
    </palette>
  </diagram>
  <plugin name="provervisual Plugin"/>
  <editor/>
  <domainGenModel href="ProVerVisual.genmodel#/"/>
</gmfgen:GenEditorGenerator>
